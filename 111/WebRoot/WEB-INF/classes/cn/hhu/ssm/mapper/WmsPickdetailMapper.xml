<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hhu.ssm.mapper.WmsPickdetailMapper" >
  <resultMap id="BaseResultMap" type="cn.hhu.ssm.po.WmsPickdetail" >
    <id column="PickDetail_ID" property="pickdetailId" jdbcType="INTEGER" />
    <result column="PickDetail_Number" property="pickdetailNumber" jdbcType="VARCHAR" />
    <result column="Detail_ID" property="detailId" jdbcType="INTEGER" />
    <result column="StorageLocationCode" property="storagelocationcode" jdbcType="VARCHAR" />
    <result column="StorageLocation_ID" property="storagelocationId" jdbcType="INTEGER" />
    <result column="RemainPickQuantity" property="remainpickquantity" jdbcType="REAL" />
    <result column="Weight" property="weight" jdbcType="REAL" />
    <result column="NetWeight" property="netweight" jdbcType="REAL" />
    <result column="Volume" property="volume" jdbcType="REAL" />
    <result column="PayableTon" property="payableton" jdbcType="REAL" />
    <result column="PickedQuantity" property="pickedquantity" jdbcType="REAL" />
    <result column="PickInstruction" property="pickinstruction" jdbcType="VARCHAR" />
    <result column="PickMan" property="pickman" jdbcType="INTEGER" />
    <result column="MakeOrderDate" property="makeorderdate" jdbcType="TIMESTAMP" />
    <result column="MakeOrderMan" property="makeorderman" jdbcType="INTEGER" />
    <result column="Quality" property="quality" jdbcType="INTEGER" />
    <result column="PickTime" property="picktime" jdbcType="TIMESTAMP" />
    <result column="Stock_ID" property="stockId" jdbcType="INTEGER" />
    <result column="IsFinished" property="isfinished" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    PickDetail_ID, PickDetail_Number, Detail_ID, StorageLocationCode, StorageLocation_ID, 
    RemainPickQuantity, Weight, NetWeight, Volume, PayableTon, PickedQuantity, PickInstruction, 
    PickMan, MakeOrderDate, MakeOrderMan, Quality, PickTime, Stock_ID, IsFinished
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.hhu.ssm.po.WmsPickdetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from wms_pickdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="offset != null &amp;&amp; limit != null">
    limit ${offset},${limit}
	</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from wms_pickdetail
    where PickDetail_ID = #{pickdetailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from wms_pickdetail
    where PickDetail_ID = #{pickdetailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hhu.ssm.po.WmsPickdetailExample" >
    delete from wms_pickdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hhu.ssm.po.WmsPickdetail" >
    insert into wms_pickdetail (PickDetail_ID, PickDetail_Number, Detail_ID, 
      StorageLocationCode, StorageLocation_ID, 
      RemainPickQuantity, Weight, NetWeight, 
      Volume, PayableTon, PickedQuantity, 
      PickInstruction, PickMan, MakeOrderDate, 
      MakeOrderMan, Quality, PickTime, 
      Stock_ID, IsFinished)
    values (#{pickdetailId,jdbcType=INTEGER}, #{pickdetailNumber,jdbcType=VARCHAR}, #{detailId,jdbcType=INTEGER}, 
      #{storagelocationcode,jdbcType=VARCHAR}, #{storagelocationId,jdbcType=INTEGER}, 
      #{remainpickquantity,jdbcType=REAL}, #{weight,jdbcType=REAL}, #{netweight,jdbcType=REAL}, 
      #{volume,jdbcType=REAL}, #{payableton,jdbcType=REAL}, #{pickedquantity,jdbcType=REAL}, 
      #{pickinstruction,jdbcType=VARCHAR}, #{pickman,jdbcType=INTEGER}, #{makeorderdate,jdbcType=TIMESTAMP}, 
      #{makeorderman,jdbcType=INTEGER}, #{quality,jdbcType=INTEGER}, #{picktime,jdbcType=TIMESTAMP}, 
      #{stockId,jdbcType=INTEGER}, #{isfinished,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.hhu.ssm.po.WmsPickdetail" >
    insert into wms_pickdetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pickdetailId != null" >
        PickDetail_ID,
      </if>
      <if test="pickdetailNumber != null" >
        PickDetail_Number,
      </if>
      <if test="detailId != null" >
        Detail_ID,
      </if>
      <if test="storagelocationcode != null" >
        StorageLocationCode,
      </if>
      <if test="storagelocationId != null" >
        StorageLocation_ID,
      </if>
      <if test="remainpickquantity != null" >
        RemainPickQuantity,
      </if>
      <if test="weight != null" >
        Weight,
      </if>
      <if test="netweight != null" >
        NetWeight,
      </if>
      <if test="volume != null" >
        Volume,
      </if>
      <if test="payableton != null" >
        PayableTon,
      </if>
      <if test="pickedquantity != null" >
        PickedQuantity,
      </if>
      <if test="pickinstruction != null" >
        PickInstruction,
      </if>
      <if test="pickman != null" >
        PickMan,
      </if>
      <if test="makeorderdate != null" >
        MakeOrderDate,
      </if>
      <if test="makeorderman != null" >
        MakeOrderMan,
      </if>
      <if test="quality != null" >
        Quality,
      </if>
      <if test="picktime != null" >
        PickTime,
      </if>
      <if test="stockId != null" >
        Stock_ID,
      </if>
      <if test="isfinished != null" >
        IsFinished,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pickdetailId != null" >
        #{pickdetailId,jdbcType=INTEGER},
      </if>
      <if test="pickdetailNumber != null" >
        #{pickdetailNumber,jdbcType=VARCHAR},
      </if>
      <if test="detailId != null" >
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="storagelocationcode != null" >
        #{storagelocationcode,jdbcType=VARCHAR},
      </if>
      <if test="storagelocationId != null" >
        #{storagelocationId,jdbcType=INTEGER},
      </if>
      <if test="remainpickquantity != null" >
        #{remainpickquantity,jdbcType=REAL},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=REAL},
      </if>
      <if test="netweight != null" >
        #{netweight,jdbcType=REAL},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=REAL},
      </if>
      <if test="payableton != null" >
        #{payableton,jdbcType=REAL},
      </if>
      <if test="pickedquantity != null" >
        #{pickedquantity,jdbcType=REAL},
      </if>
      <if test="pickinstruction != null" >
        #{pickinstruction,jdbcType=VARCHAR},
      </if>
      <if test="pickman != null" >
        #{pickman,jdbcType=INTEGER},
      </if>
      <if test="makeorderdate != null" >
        #{makeorderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="makeorderman != null" >
        #{makeorderman,jdbcType=INTEGER},
      </if>
      <if test="quality != null" >
        #{quality,jdbcType=INTEGER},
      </if>
      <if test="picktime != null" >
        #{picktime,jdbcType=TIMESTAMP},
      </if>
      <if test="stockId != null" >
        #{stockId,jdbcType=INTEGER},
      </if>
      <if test="isfinished != null" >
        #{isfinished,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hhu.ssm.po.WmsPickdetailExample" resultType="java.lang.Integer" >
    select count(*) from wms_pickdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update wms_pickdetail
    <set >
      <if test="record.pickdetailId != null" >
        PickDetail_ID = #{record.pickdetailId,jdbcType=INTEGER},
      </if>
      <if test="record.pickdetailNumber != null" >
        PickDetail_Number = #{record.pickdetailNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.detailId != null" >
        Detail_ID = #{record.detailId,jdbcType=INTEGER},
      </if>
      <if test="record.storagelocationcode != null" >
        StorageLocationCode = #{record.storagelocationcode,jdbcType=VARCHAR},
      </if>
      <if test="record.storagelocationId != null" >
        StorageLocation_ID = #{record.storagelocationId,jdbcType=INTEGER},
      </if>
      <if test="record.remainpickquantity != null" >
        RemainPickQuantity = #{record.remainpickquantity,jdbcType=REAL},
      </if>
      <if test="record.weight != null" >
        Weight = #{record.weight,jdbcType=REAL},
      </if>
      <if test="record.netweight != null" >
        NetWeight = #{record.netweight,jdbcType=REAL},
      </if>
      <if test="record.volume != null" >
        Volume = #{record.volume,jdbcType=REAL},
      </if>
      <if test="record.payableton != null" >
        PayableTon = #{record.payableton,jdbcType=REAL},
      </if>
      <if test="record.pickedquantity != null" >
        PickedQuantity = #{record.pickedquantity,jdbcType=REAL},
      </if>
      <if test="record.pickinstruction != null" >
        PickInstruction = #{record.pickinstruction,jdbcType=VARCHAR},
      </if>
      <if test="record.pickman != null" >
        PickMan = #{record.pickman,jdbcType=INTEGER},
      </if>
      <if test="record.makeorderdate != null" >
        MakeOrderDate = #{record.makeorderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.makeorderman != null" >
        MakeOrderMan = #{record.makeorderman,jdbcType=INTEGER},
      </if>
      <if test="record.quality != null" >
        Quality = #{record.quality,jdbcType=INTEGER},
      </if>
      <if test="record.picktime != null" >
        PickTime = #{record.picktime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stockId != null" >
        Stock_ID = #{record.stockId,jdbcType=INTEGER},
      </if>
      <if test="record.isfinished != null" >
        IsFinished = #{record.isfinished,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update wms_pickdetail
    set PickDetail_ID = #{record.pickdetailId,jdbcType=INTEGER},
      PickDetail_Number = #{record.pickdetailNumber,jdbcType=VARCHAR},
      Detail_ID = #{record.detailId,jdbcType=INTEGER},
      StorageLocationCode = #{record.storagelocationcode,jdbcType=VARCHAR},
      StorageLocation_ID = #{record.storagelocationId,jdbcType=INTEGER},
      RemainPickQuantity = #{record.remainpickquantity,jdbcType=REAL},
      Weight = #{record.weight,jdbcType=REAL},
      NetWeight = #{record.netweight,jdbcType=REAL},
      Volume = #{record.volume,jdbcType=REAL},
      PayableTon = #{record.payableton,jdbcType=REAL},
      PickedQuantity = #{record.pickedquantity,jdbcType=REAL},
      PickInstruction = #{record.pickinstruction,jdbcType=VARCHAR},
      PickMan = #{record.pickman,jdbcType=INTEGER},
      MakeOrderDate = #{record.makeorderdate,jdbcType=TIMESTAMP},
      MakeOrderMan = #{record.makeorderman,jdbcType=INTEGER},
      Quality = #{record.quality,jdbcType=INTEGER},
      PickTime = #{record.picktime,jdbcType=TIMESTAMP},
      Stock_ID = #{record.stockId,jdbcType=INTEGER},
      IsFinished = #{record.isfinished,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hhu.ssm.po.WmsPickdetail" >
    update wms_pickdetail
    <set >
      <if test="pickdetailNumber != null" >
        PickDetail_Number = #{pickdetailNumber,jdbcType=VARCHAR},
      </if>
      <if test="detailId != null" >
        Detail_ID = #{detailId,jdbcType=INTEGER},
      </if>
      <if test="storagelocationcode != null" >
        StorageLocationCode = #{storagelocationcode,jdbcType=VARCHAR},
      </if>
      <if test="storagelocationId != null" >
        StorageLocation_ID = #{storagelocationId,jdbcType=INTEGER},
      </if>
      <if test="remainpickquantity != null" >
        RemainPickQuantity = #{remainpickquantity,jdbcType=REAL},
      </if>
      <if test="weight != null" >
        Weight = #{weight,jdbcType=REAL},
      </if>
      <if test="netweight != null" >
        NetWeight = #{netweight,jdbcType=REAL},
      </if>
      <if test="volume != null" >
        Volume = #{volume,jdbcType=REAL},
      </if>
      <if test="payableton != null" >
        PayableTon = #{payableton,jdbcType=REAL},
      </if>
      <if test="pickedquantity != null" >
        PickedQuantity = #{pickedquantity,jdbcType=REAL},
      </if>
      <if test="pickinstruction != null" >
        PickInstruction = #{pickinstruction,jdbcType=VARCHAR},
      </if>
      <if test="pickman != null" >
        PickMan = #{pickman,jdbcType=INTEGER},
      </if>
      <if test="makeorderdate != null" >
        MakeOrderDate = #{makeorderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="makeorderman != null" >
        MakeOrderMan = #{makeorderman,jdbcType=INTEGER},
      </if>
      <if test="quality != null" >
        Quality = #{quality,jdbcType=INTEGER},
      </if>
      <if test="picktime != null" >
        PickTime = #{picktime,jdbcType=TIMESTAMP},
      </if>
      <if test="stockId != null" >
        Stock_ID = #{stockId,jdbcType=INTEGER},
      </if>
      <if test="isfinished != null" >
        IsFinished = #{isfinished,jdbcType=INTEGER},
      </if>
    </set>
    where PickDetail_ID = #{pickdetailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hhu.ssm.po.WmsPickdetail" >
    update wms_pickdetail
    set PickDetail_Number = #{pickdetailNumber,jdbcType=VARCHAR},
      Detail_ID = #{detailId,jdbcType=INTEGER},
      StorageLocationCode = #{storagelocationcode,jdbcType=VARCHAR},
      StorageLocation_ID = #{storagelocationId,jdbcType=INTEGER},
      RemainPickQuantity = #{remainpickquantity,jdbcType=REAL},
      Weight = #{weight,jdbcType=REAL},
      NetWeight = #{netweight,jdbcType=REAL},
      Volume = #{volume,jdbcType=REAL},
      PayableTon = #{payableton,jdbcType=REAL},
      PickedQuantity = #{pickedquantity,jdbcType=REAL},
      PickInstruction = #{pickinstruction,jdbcType=VARCHAR},
      PickMan = #{pickman,jdbcType=INTEGER},
      MakeOrderDate = #{makeorderdate,jdbcType=TIMESTAMP},
      MakeOrderMan = #{makeorderman,jdbcType=INTEGER},
      Quality = #{quality,jdbcType=INTEGER},
      PickTime = #{picktime,jdbcType=TIMESTAMP},
      Stock_ID = #{stockId,jdbcType=INTEGER},
      IsFinished = #{isfinished,jdbcType=INTEGER}
    where PickDetail_ID = #{pickdetailId,jdbcType=INTEGER}
  </update>
</mapper>